@using Nop.Core
@using Nop.Services.Configuration
@using Nop.Services.Customers
@using Nop.Services.Helpers
@using Nop.Services.Media
@using Microsoft.AspNetCore.WebUtilities
@using Microsoft.Extensions.Primitives
@using Microsoft.AspNetCore.Html

@inject IHelperService helperService
@inject ISettingService settingService
@inject IPictureService pictureService
@inject IStoreContext storeContext
@inject IWorkContext workContext
@inject ICustomerService customerService
@functions {
    public string GetRollOverString(string resourceName)
    {
        return helperService
            .GetRollOverTextForStringResource(resourceName);
    }
}
@{
    var storeId = storeContext.CurrentStore.Id;
    var controllerName = Url.ActionContext.RouteData.Values["controller"].ToString();
    var isHomePage = controllerName.Equals("home", StringComparison.InvariantCultureIgnoreCase);

    //IHtmlContent homePageSlider = null;
    var isHomePageSliderEnabled = string.Empty;

    var menuDropdownLayout = settingService.GetSettingByKey("venturethemesettings.menudropdowncolor", "dark-layout", storeId, true);


    var isLoggedIn = customerService.IsRegistered(workContext.CurrentCustomer);
    var myAccountHref = isLoggedIn ? Url.RouteUrl("CustomerInfo") : Url.RouteUrl("Login");
    var isVendor = customerService.IsVendor(workContext.CurrentCustomer);

}

@* Mobile Bottom Navigation *@
<nav class="navbar fixed-bottom navbar-light navbar-expand bg-light mob-bottom-nav">
    <div class="collapse navbar-collapse" id="navbarText">
        <ul class="navbar-nav ml-auto mr-auto">
            <li class="nav-item">
                <a class="nav-link pl-3 pr-3 pt-1 pb-1" href="/">
                    <img src="/Themes/Venture/Content/img/logo-new-small.png"
                         class="d-block ml-auto mr-auto"
                         style="max-width: 28px;" />
                    <span class="d-block text-center mt-1 font-weight-bold" style="font-size: 12px;">
                        Home
                    </span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link pl-3 pr-3 pt-1 pb-1 exp-mob-menu" href="@Url.RouteUrl("AllCategories")">
                    <i class="fas fa-th d-block text-center" style="font-size: 24px;"></i>
                    <span class="d-block text-center mt-1 font-weight-bold" style="font-size: 12px;">
                        Categories
                    </span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link pl-3 pr-3 pt-1 pb-1" href="/cart">
                    <i class="fas fa-shopping-cart d-block text-center" style="font-size: 24px;"></i>
                    <span class="d-block text-center mt-1 font-weight-bold" style="font-size: 12px;">
                        Cart
                    </span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link pl-3 pr-3 pt-1 pb-1" href="@myAccountHref">
                    <i class="fas fa-user d-block text-center" style="font-size: 24px;"></i>
                    <span class="d-block text-center mt-1 font-weight-bold" style="font-size: 12px;">
                        Account
                    </span>
                </a>
            </li>
            <li class="nav-item">
                <a class="nav-link pl-3 pr-3 pt-1 pb-1" href="@Url.RouteUrl("CustomerWishRequestAll")">
                    <i class="fas fa-praying-hands d-block text-center" style="font-size: 24px;"></i>
                    <span class="d-block text-center mt-1 font-weight-bold" style="font-size: 12px;">
                        Customer Wish
                    </span>
                </a>
            </li>
        </ul>
    </div>
</nav>
@* Off-canvas accounts menu for mobile *@
<div class="accounts-menu-wrap" style="display: none;">
    <div class="accounts-menu-content shadow">
        <span class="menu-close-btn">
            <i class="fas fa-times"></i>
        </span>
        <ul class="nav flex-column pt-3">

            @if (isLoggedIn)
            {
                <li class="nav-item">
                    <a class="nav-link active" href="@Url.RouteUrl("CustomerInfo")">
                        @T("TopLinks.ManageMyAccount")
                    </a>
                </li>

                @if (isVendor)
                {
                    <li class="nav-item">
                        <a class="nav-link active" href="/Admin">
                            @T("TopLinks.MyDashboard")
                        </a>
                    </li>
                }

                <li class="nav-item">
                    <div class="dropdown-divider"></div>
                </li>

                <li class="nav-item">
                    <a class="nav-link active" href="@Url.RouteUrl("Logout")">
                        @T("Account.Logout")
                    </a>
                </li>

            }
            else
            {
                <li class="nav-item">
                    <a class="nav-link" href="@Url.RouteUrl("Register")">@T("Account.Register")</a>
                </li>

                <li class="nav-item">
                    <a class="nav-link" href="@Url.RouteUrl("Login")">@T("Account.Login")</a>
                </li>

                <li class="nav-item">
                    <div class="dropdown-divider"></div>
                </li>

                <li class="nav-item">
                    <a class="nav-link" href="/vendor-login">Sell on Site</a>
                </li>
            }

        </ul>
    </div>
</div>

<div class="header">
    @await Component.InvokeAsync("Widget", new { widgetZone = "header" })
    <div class="header-upper">
        <div class="header-selectors-wrapper">
            @*@await Component.InvokeAsync("TaxTypeSelector")*@
            @*@await Component.InvokeAsync("CurrencySelector")*@
            @await Component.InvokeAsync("LanguageSelector")
            @await Html.PartialAsync("_TopLinks")
            @await Component.InvokeAsync("Widget", new { widgetZone = "header_selectors" })
        </div>
    </div>
    <div class="header-lower @isHomePageSliderEnabled">
        <div class="header-left">
            <div class="header-logo">
                @await Component.InvokeAsync("Logo")
            </div>
        </div>
        <div class="header-center">

            <div class="header-menu @menuDropdownLayout" id="mob-menu" style="display: none;">
                <div class="close-menu">
                    <div class="mobile-logo">
                        @await Component.InvokeAsync("Logo")
                    </div>
                    <span>@T("SevenSpikes.Themes.Common.CloseMenu")</span>
                </div>
                @{
                    var menuHtml = await Component.InvokeAsync("Widget", new { widgetZone = "theme_header_menu" });
                }
                @if (!String.IsNullOrEmpty(menuHtml.ToHtmlString()))
                {
                    @menuHtml
                }
                else
                {
                    @await Component.InvokeAsync("TopMenu")
                }
                <div class="mobile-menu-items">
                    @await Component.InvokeAsync("HeaderLinks")
                </div>
            </div>

            <div class="wsmenu" id="pc-menu" style="display: none;">

                <ul class="wsmenu-list bg-transparent" style="height: 75px;">
                    <li class="h-100">
                        <a href="#" class="navtext h-100">
                            <span title="@GetRollOverString("MegaMenu.ShopBy")">@T("MegaMenu.ShopBy")</span>
                            <span title="@GetRollOverString("MegaMenu.Category")">@T("MegaMenu.Category")</span>
                        </a>
                        <div class="wsshoptabing wtsdepartmentmenu">
                            <div class="wsshopwp h-100">
                                @await Component.InvokeAsync("TopMenu")
                            </div>
                        </div>
                    </li>
                    @await Html.PartialAsync("_CustomItems.TopMenu")
                </ul>


                <div class="close-menu">
                    <div class="mobile-logo">
                        @await Component.InvokeAsync("Logo")
                    </div>
                    <span>@T("SevenSpikes.Themes.Common.CloseMenu")</span>
                </div>

            </div>
        </div>
        @{
            var flyoutShoppingCart = await Component.InvokeAsync("FlyoutShoppingCart");
            var headerRightAdditinalClass = string.IsNullOrEmpty(flyoutShoppingCart.ToHtmlString()) ? "shopping-cart-disabled" : "";
        }
        <div class="header-right @headerRightAdditinalClass">
            <div class="search-box store-search-box">
                @await Component.InvokeAsync("SearchBox")
                <div class="search-opener">@T("search")</div>
            </div>
            @await Component.InvokeAsync("HeaderLinks")
            @flyoutShoppingCart
        </div>
    </div>
</div>

@if (isHomePage)
{
    @await Component.InvokeAsync("Widget", new { widgetZone = "venture_theme_ajax_filters_pro" })
}
